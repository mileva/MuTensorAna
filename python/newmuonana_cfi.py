import FWCore.ParameterSet.Config as cms

#process.demo = cms.EDAnalyzer('NewMuonAna',
demo = cms.EDAnalyzer('NewMuonAna',
                               mymcdata = cms.bool(True),
                               myMassMin = cms.double(200.),
#                               myetaCut = cms.double(2.1),
                               myisoCut = cms.double(0.1),
                               mytrackLayersCut = cms.int32(5),
                               mypTcut = cms.double(45.),
                               myangleCut = cms.double(0.02),
                               mydxyCut = cms.double(0.2),
                               mydzCut = cms.double(0.5),
                               myvrtxCh2Cut = cms.double(10.),
                               mychi2ProbCut = cms.double(0.015),
                               mydeltaPhiCut = cms.double(0.5),
                               mysin2ThetaCut = cms.double(0.9),
                               myminSignalRangeCut = cms.double(300.),
                               mymaxSignalRangeCut = cms.double(700.),
                               mycheckMetCut = cms.double(50.),
                               myminZpeak = cms.double(80.),
                               mymaxZpeak = cms.double(100.),
                               myleftBandMin = cms.double(340.),
                               myleftBandMax = cms.double(400.),
                               mysignalBandMin = cms.double(400.),
                               mysignalBandMax = cms.double(450.),
                               myrightBandMin = cms.double(450.),
                               myrightBandMax = cms.double(700.),

                               trigger_summary_src = cms.InputTag('hltTriggerSummaryAOD', '', 'HLT'),
#                               triggerDecision = triggerDecision,
                               check_l1 = cms.bool(True),
                               acceptance_max_eta_1 = cms.double(2.1),
                               acceptance_max_eta_2 = cms.double(2.4),
                               acceptance_min_pt = cms.double(45),
                               hlt_single_min_pt = cms.double(40),
                               hlt_single_max_eta = cms.double(2.1),
                               checking_prescaled_path = cms.bool(False),

                               TrigTag = cms.InputTag("TriggerResults::HLT"),
                               triggerEvent = cms.InputTag( "hltTriggerSummaryAOD::HLT" ),  
                               hltPath = cms.string("HLT_Mu40_eta2p1_v9"),
#                               hltPath = cms.string("HLT_Mu40_eta2p1_v10"),
                               L3FilterName= cms.string("hltL3fL1sMu16Eta2p1L1f0L2f16QL3Filtered40"),
#                               L3FilterName= cms.vstring("hltL3fL1sMu16Eta2p1L1f0L2f16QL3Filtered40","hltL3fL1sMu16Eta2p1L1f0L2f16QL3Filtered40Q"),
                               L1FilterName= cms.string("hltL1sL1SingleMu16er"),
#                               l1GtObjectMap = cms.InputTag('hltL1GtObjectMap')
                               AlgorithmName = cms.string("L1_SingleMu16_Eta2p1"),
                               maxDPtRel = cms.double( 0.5 ),
                               maxDeltaR = cms.double( 0.5 ),
                               maxDeltaRMatchTrigger = cms.double( 0.2 ),
                               ZStar = cms.bool(True),
                               DY = cms.bool(False)
)
